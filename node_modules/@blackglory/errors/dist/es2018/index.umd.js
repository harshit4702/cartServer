(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define(['exports'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Errors = {}));
}(this, (function (exports) { 'use strict';

    class CustomError extends Error {
        get name() {
            return this.constructor.name;
        }
    }

    class ExpectedError extends CustomError {
    }

    class AssertionError extends CustomError {
    }

    function normalize(err) {
        var _a;
        return {
            name: err.name,
            message: err.message,
            stack: (_a = err.stack) !== null && _a !== void 0 ? _a : null
        };
    }

    /**
     * @throws {ExpectedError}
     */
    function refute(condition, message) {
        if (condition)
            throw new ExpectedError(message);
    }

    /**
     * @throws {AssertionError}
     */
    function assert(condition, message) {
        if (!condition)
            throw new AssertionError(message);
    }

    exports.AssertionError = AssertionError;
    exports.CustomError = CustomError;
    exports.ExpectedError = ExpectedError;
    exports.assert = assert;
    exports.normalize = normalize;
    exports.refute = refute;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=index.umd.js.map
